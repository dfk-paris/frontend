<dfk-input>
  <label
    if={props.label}
    for={props.name}
  >{props.label}</label>

  <div class="control">
    <input
      type={props.type || 'text'}
      autocomplete="off"
      id={props.id || props.name}
      name={props.name}
      value={propsValue()}
      placeholder={props.placeholder}
      oninput={event => onChange(event)}
      onfocus={event => onFocus(event)}
      onblur={evebt => onBlur(event)}
      checked={propsChecked()}
      spellcheck="false"
    />
    <a
      if={props.helpButton}
      onclick={event => onHelpClick(event)}
      class="help-button"
    >?</a>
    <div if={props.help} class="help {state.help ? 'show' : ''}">
      {props.help}
    </div>
  </div>

  <script>
    export default class {
      onBeforeMount(props, state) {
        state.help = false
      }

      onChange(event) {
        if (this.props.updateHandler) {
          let values = {[this.props.name]: this.getValue()}
          if (this.props.resetPage) {
            values['page'] = null
          }

          this.props.updateHandler(values)
        }

        this.update({help: false})
      }

      onKeyup(event) {
        const h = this.props.onkeyup
        if (h) h(event)
      }

      onFocus(event) {
        const h = this.props.onfocus
        if (h) h(event)

        if (this.getValue()) return
          
        this.update({help: true})
      }

      onBlur(event) {
        const h = this.props.onblur
        if (h) h(event)

        this.update({help: false})
      }

      onHelpClick(event) {
        event.preventDefault()

        this.update({help: !this.state.help})
      }

      getName() {
        return this.props.name
      }

      propsValue() {
        if (this.props.type == 'checkbox') {
          return 'cb-value'
        }

        return this.props.value
      }

      propsChecked() {
        if (this.props.type == 'checkbox') {
          return this.props.value
        }

        return false
      }

      getValue() {
        if (this.props.type == 'checkbox') {
          const checked = this.root.querySelector('input').checked
          return checked || null
        }

        return this.root.querySelector('input').value
      }
    }
  </script>
</dfk-input>